{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH,qBAAuF,eAAe,CAAC,CAAA;AACvG,+DAA+D;AAC/D,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,wBAAwB,CAAC,CAAA;AAE/B;;GAEG;AACS,6BAAqB,GAAG,IAAI,kBAAW,CAAC,uBAAuB,CAAC,CAAC;AAE7E;;GAEG;AACJ,sBAA6B,IAAY;IACvC,IAAI,GAAG,GAAQ,MAAM,CAAC;IACtB,EAAE,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,UAAC,EAAE,IAAK,OAAA,GAAG,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAA3B,CAA2B,CAAC;IAC7C,CAAC;IACD,MAAM,CAAC,UAAC,EAAE,IAAK,OAAA,IAAI,CAAC,iBAAiB,CAAC,cAAM,OAAA,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAtB,CAAsB,CAAC,EAApD,CAAoD,CAAC;AACtE,CAAC;AANe,oBAAY,eAM3B,CAAA;AAGD,gBAAyB,iCAAiC;IACzD;;OAEG;IACF,qBAJuB,iCAAiC,CAIpC,OAAe,EAAW,mBAAwB;QAAlD,YAAO,GAAP,OAAO,CAAQ;QAAW,wBAAmB,GAAnB,mBAAmB,CAAK;IAAG,CAAC;IAE3E;;OAEG;IACF,YATuB,iCAAiC,kBASjD,GAAP,UAAQ,KAAoB,EAAE,EAAyB;QACrD,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEI,YAdkB,iCAAiC,WAczC,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,YAlBkB,iCAAiC,eAkBrC,GAA6D;QAClF,EAAC,IAAI,EAAE,aAAM,GAAG;QAChB,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,6BAAqB,EAAG,EAAE,EAAG,EAAC;KACnF,CAAC;IACF,mBAtByB,iCAsBxB;AAAD,CAAC,AAtBD,IAsBC;AAtBY,oBAAY,iCAAiC,AAAlC,eAAC,iCAsBxB,CAAA;AAEA;;GAEG;AACS,2CAAmC,GAAU;IACxD,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE;CAChD,CAAC;AAEW,oDAA4C,GAAU;IACjE,EAAE,OAAO,EAAE,6BAAqB,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,CAAE,aAAM,CAAE,EAAE;CAC/E,CAAC;AAGF;IAAA;IA6BA,CAAC;IA5BA;;OAEG;IACK,yBAAO,GAAd,UAAe,MAAgB;QAAhB,sBAAgB,GAAhB,WAAgB;QAC7B,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EACJ,CAAC,MAAM,CAAC,mBAAmB,KAAK,KAAK,GAAG,EAAE,GAAG,oDAA4C,CAAC,QAC1F,2CAAmC,CACvC;SACF,CAAA;IACH,CAAC;IAEF;;OAEG;IACK,8BAAY,GAAnB;QACE,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC,EAExB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAA6D,EACjF,CAAC;IACF,wBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,yBAAiB,oBA6B7B,CAAA","sourcesContent":["/*\n * @AngularClass\n */\n\nimport { NgZone, NgModule, ModuleWithProviders, Inject, OpaqueToken, Injectable } from '@angular/core';\n// import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n /*\n  * token to requestIdleCallback\n  */\nexport const REQUEST_IDLE_CALLBACK = new OpaqueToken('REQUEST_IDLE_CALLBACK');\n\n /*\n  * Private please use @angularclass/request-idle-callback if you want to use this\n  */\nexport function _requestIdle(zone: NgZone) {\n  let win: any = window;\n  if (win.requestIdleCallback) {\n    return (fn) => win.requestIdleCallback(fn);\n  }\n  return (fn) => zone.runOutsideAngular(() => win.setTimeout(fn, 10));\n}\n\n\nexport class IdlePreload /*implements PreloadingStrategy*/ {\n /*\n  * include zone to run outside of zone.js\n  */\n  constructor(private _ngZone: NgZone,  private requestIdleCallback: any) {}\n\n /*\n  * fire off preloading async modules\n  */\n  preload(route: /*Route*/ any, fn: () => Observable<any>): Observable<any> {\n    this.requestIdleCallback(fn);\n    return Observable.of(null);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Inject, args: [REQUEST_IDLE_CALLBACK, ] }, ]},\n];\n}\n\n /*\n  * raw providers\n  */\nexport const ANGULARCLASS_IDLE_PRELOAD_PROVIDERS: any[] = [\n  { provide: IdlePreload, useClass: IdlePreload }\n];\n\nexport const ANGULARCLASS_REQUEST_IDLE_CALLBACK_PROVIDERS: any[] = [\n  { provide: REQUEST_IDLE_CALLBACK, useFactory: _requestIdle, deps: [ NgZone ] }\n];\n\n\nexport class IdlePreloadModule {\n /*\n  * forRoot() to allow providers only be created once\n  */\n  static forRoot(config: any = {}): ModuleWithProviders {\n    return {\n      ngModule: IdlePreloadModule,\n      providers: [\n        ...(config.requestIdleCallback === false ? [] : ANGULARCLASS_REQUEST_IDLE_CALLBACK_PROVIDERS),\n        ...ANGULARCLASS_IDLE_PRELOAD_PROVIDERS\n      ]\n    }\n  }\n\n /*\n  * alias for reference to IdlePreload token\n  */\n  static IdleStrategy() {\n    return IdlePreload;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  // because Angular\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}